package x509utils

import (
	"testing"
)

func TestParsePrivateKey(t *testing.T) {
	pemPrivateKey := `-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----`

	_, err := ParsePemPrivateKey([]byte(pemPrivateKey))
	if err != nil {
		t.Fatalf("parsing certificate failed: [%v]", err)
	}
}

func TestParseCertificate(t *testing.T) {
	pemCert := `-----BEGIN CERTIFICATE-----
MIIFCjCCAvKgAwIBAgIRANhP0Hjn9O07fG6Ue5IjlwkwDQYJKoZIhvcNAQELBQAw
DzENMAsGA1UEAxMEdGVzdDAeFw0yMTExMDExNjE4NTBaFw0yMjExMDExNjE4NTBa
MA8xDTALBgNVBAMTBHRlc3QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
AQDl8//zX3JSuIAiEtYBoUFddN3cMmu74M7H2w860CpXCBBbVMi4/gy/rBpLD2aD
vJf2TyJRs+iGiD9DHiIiPiyIyTxwIjjmdvN/u/nh9TN7JiYX0/prqEvyPTPfvb/2
cchDLSKbDz1+nIMH9wgSyrg+njV/G+jSeuto7zZfmHqgDG112tGKfH3C1YBwN8iS
QK1p4G/5sbQm/+G/bcmnw0wWc+RahU3kdJT9zlPeEa9/jtKk13+AZKyqwrDyBxDk
v1A9CmK1Ws+o5WXKmbjyhUbW7oD4tsQkH5qzcJtp89li7V/ikR0Pq5/nfNnpsU5n
WN6IloVtLSeMRhksGbZynw2m2uHttTRQpoYrin0vyIPHDMegAqTL7rpzbBATMB88
nG4MjCFC89pSbOa/URoYyp9vkyRif7bPQa6edGim8dcbyAS1BmHdxFxTj5Y/i86J
SVMViv5BeOfigaGS+FkIP5vN8i6wEA4lBd0t0jiEbED7PNO2G3rrbBIF06ecBRFD
ECSZi2+uuJv78BxwZm8ZZQdAMt9hcNvas+I+ThTHMSxKxb/kg607Q9lZtoMGR9tU
Lx2W3Ke1/QMEmHTYT6BVCWU0p7nCZ5lWrVy1eWNUavToj7sbF6/dnNE1RzZAZaFz
iiMfqrqIzXHc75U6uTv1BE+0khpUMf/4JQRLck6F5BgkdwIDAQABo2EwXzAOBgNV
HQ8BAf8EBAMCAoQwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMA8GA1Ud
EwEB/wQFMAMBAf8wHQYDVR0OBBYEFMV4C11UQVuSexxz+UDokh8fQ3/DMA0GCSqG
SIb3DQEBCwUAA4ICAQDR3AQ42AGCHQbPjGPpzAxlL0QTkA3gFj8DyTxqWDWdvwrw
O/2B6eB70KoS9yyp0yrUe9JhJcfS26ggBi1LjMCM7/J0eVeXCyFoKBhX58PLeGs3
1AxMwPBNnWXZ/MQ+E48FeWNFZjeE/5cjryyW2Z8AszBAvWx9mHg4/WEfHPg/H3mS
1aItFzjMKF3i/aQj/m/pbqr04tHouLmLfO9fk6GUnbFcrITHKUEHBYI9Mubccrz9
Kd/zJmY0kA015a2cATYUZ8i3lrlxWFkQm50PeFIrkoHvLZRegtdGkiG6FL309gFn
qIkyCmKOiLnu9Pq6FBQdAJRTY6Tg7iTJoDll6T6UHGer3HiMQVnN8q062Uohk7li
42bhGH/1/7b2MnSwPxdMvUFmVCEzwpARwc7Qpo4JivDdAMeW0tXlEAwFPc5X2abL
TGFDZdEnBZ60i2Y2JlMi4GxYtKGkBK2QtRGVW+GcEBfQsj4oC1ChAXWhxt791xlx
HCsSKxLpVclR6dun1zoJiHT0HuQ3XPs6R6AVoeVP/7QY0ENFqZjj3Qb2GUxFlTwR
4ZftrboPwmhKY+KoQMOuAgSRbGOHs6DfX/dFxxAR/ySC/Hn3j/MZfN+71baXTPR1
NKxT9b1k+diStFdDARZA3xzMin1bYqVjmqbNpY3TTES+ZgUrQlmPaamaR9b2SQ==
-----END CERTIFICATE-----`

	cert, err := ParsePemCertificate([]byte(pemCert))
	if err != nil {
		t.Fatalf("parsing certificate failed: [%v]", err)
	}

	expected := "test"
	if cert.Subject.CommonName != expected {
		t.Fatalf("cert common name is not expected: [%s], actual: [%s]", expected, cert.Subject.CommonName)
	}
}

func TestRandomCertSerialNumber(t *testing.T) {
	first, err := GetRandomCertificateSerialNumber()
	if err != nil {
		t.Fatal("Creating random serial number failed")
	}
	second, err := GetRandomCertificateSerialNumber()
	if err != nil {
		t.Fatal("Creating random serial number failed")
	}

	if first == second {
		t.Fatal("Created *random* serial numbers are same, should've been different!")
	}
}
